{"version":3,"sources":["../node_modules/process/browser.js","main.js"],"names":["cachedSetTimeout","cachedClearTimeout","process","module","exports","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","setTimeout","e","call","runClearTimeout","marker","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","length","concat","drainQueue","timeout","len","run","Item","array","noop","nextTick","args","Array","arguments","i","push","prototype","apply","title","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","name","binding","cwd","chdir","dir","umask","global","keys","Settings","CELL_WIDTH","CELL_HEIGHT","CELL_MARGIN","ANIMATION_SWELLING","ANIMATION_GEN_TIME","FONT_SIZE","State","board","merge","moveCells","move","nextState","_moveUp","_rotate","j","dx","dy","k","ni","nj","result","y","x","value","rot","nextBoard","nextMerge","Math","floor","ny","nx","nextMoveCells","moveCell","fx","fy","tx","ty","cy","num","Game","screen","document","getElementById","animation","Animation","state","v","empty","getEmptyCells","index","random","rewriteCells","generate","isDie","finish","calcNextState","update","bottomCells","cells","pos","Map","itr","cell","Cell","setPos","addY","addX","addNum","progress","time","start","map","forEach","key","console","error","set","requestAnimationFrame","proc","timestamp","min","translate","deleteIndex","animationIndex","addIndex","Date","p","get","changeAttrib","appear","removeChild","elem","delete","type","_initElement","appendChild","posX","posY","style","left","top","height","width","fontSize","sin","PI","lineHeight","textContent","img","createElement","src","sisisinUrl","backgroundImage","sisisin2048","backgroundSize","backgroundColor","color","classList","add","game","addEventListener","keyCode"],"mappings":";;;;;;AACA,IAOIA,EACAC,EARAC,EAAUC,OAAOC,QAAU,GAU/B,SAASC,IACC,MAAA,IAAIC,MAAM,mCAEpB,SAASC,IACC,MAAA,IAAID,MAAM,qCAsBpB,SAASE,EAAWC,GACZT,GAAAA,IAAqBU,WAEdA,OAAAA,WAAWD,EAAK,GAGvB,IAACT,IAAqBK,IAAqBL,IAAqBU,WAEzDA,OADPV,EAAmBU,WACZA,WAAWD,EAAK,GAEvB,IAEOT,OAAAA,EAAiBS,EAAK,GAC/B,MAAME,GACA,IAEOX,OAAAA,EAAiBY,KAAK,KAAMH,EAAK,GAC1C,MAAME,GAEGX,OAAAA,EAAiBY,KAAK,KAAMH,EAAK,KAMpD,SAASI,EAAgBC,GACjBb,GAAAA,IAAuBc,aAEhBA,OAAAA,aAAaD,GAGpB,IAACb,IAAuBM,IAAwBN,IAAuBc,aAEhEA,OADPd,EAAqBc,aACdA,aAAaD,GAEpB,IAEOb,OAAAA,EAAmBa,GAC5B,MAAOH,GACD,IAEOV,OAAAA,EAAmBW,KAAK,KAAME,GACvC,MAAOH,GAGEV,OAAAA,EAAmBW,KAAK,KAAME,MAjEhD,WACO,IAEId,EADsB,mBAAfU,WACYA,WAEAL,EAEzB,MAAOM,GACLX,EAAmBK,EAEnB,IAEIJ,EADwB,mBAAjBc,aACcA,aAEAR,EAE3B,MAAOI,GACLV,EAAqBM,GAjB5B,GAwED,IAEIS,EAFAC,EAAQ,GACRC,GAAW,EAEXC,GAAc,EAElB,SAASC,IACAF,GAAaF,IAGlBE,GAAW,EACPF,EAAaK,OACbJ,EAAQD,EAAaM,OAAOL,GAE5BE,GAAc,EAEdF,EAAMI,QACNE,KAIR,SAASA,IACDL,IAAAA,EAAAA,CAGAM,IAAAA,EAAUhB,EAAWY,GACzBF,GAAW,EAGLO,IADFA,IAAAA,EAAMR,EAAMI,OACVI,GAAK,CAGA,IAFPT,EAAeC,EACfA,EAAQ,KACCE,EAAaM,GACdT,GACAA,EAAaG,GAAYO,MAGjCP,GAAc,EACdM,EAAMR,EAAMI,OAEhBL,EAAe,KACfE,GAAW,EACXL,EAAgBW,IAiBpB,SAASG,EAAKlB,EAAKmB,GACVnB,KAAAA,IAAMA,EACNmB,KAAAA,MAAQA,EAYjB,SAASC,KA5BT3B,EAAQ4B,SAAW,SAAUrB,GACrBsB,IAAAA,EAAO,IAAIC,MAAMC,UAAUZ,OAAS,GACpCY,GAAAA,UAAUZ,OAAS,EACd,IAAA,IAAIa,EAAI,EAAGA,EAAID,UAAUZ,OAAQa,IAClCH,EAAKG,EAAI,GAAKD,UAAUC,GAGhCjB,EAAMkB,KAAK,IAAIR,EAAKlB,EAAKsB,IACJ,IAAjBd,EAAMI,QAAiBH,GACvBV,EAAWe,IASnBI,EAAKS,UAAUV,IAAM,WACZjB,KAAAA,IAAI4B,MAAM,KAAM,KAAKT,QAE9B1B,EAAQoC,MAAQ,UAEhBpC,EAAQqC,IAAM,GACdrC,EAAQsC,KAAO,GACftC,EAAQuC,QAAU,GAClBvC,EAAQwC,SAAW,GAInBxC,EAAQyC,GAAKd,EACb3B,EAAQ0C,YAAcf,EACtB3B,EAAQ2C,KAAOhB,EACf3B,EAAQ4C,IAAMjB,EACd3B,EAAQ6C,eAAiBlB,EACzB3B,EAAQ8C,mBAAqBnB,EAC7B3B,EAAQ+C,KAAOpB,EACf3B,EAAQgD,gBAAkBrB,EAC1B3B,EAAQiD,oBAAsBtB,EAE9B3B,EAAQkD,UAAY,SAAUC,GAAe,MAAA,IAE7CnD,EAAQoD,QAAU,SAAUD,GAClB,MAAA,IAAI/C,MAAM,qCAGpBJ,EAAQqD,IAAM,WAAqB,MAAA,KACnCrD,EAAQsD,MAAQ,SAAUC,GAChB,MAAA,IAAInD,MAAM,mCAEpBJ,EAAQwD,MAAQ,WAAoB,OAAA;;;;AC6XpC,IAAA,EAAA,QAAA,WApjBA,EAAA,EAAA,QAAA,yBACA,EAAA,EAAA,QAAA,6BAmjBA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,MAAA,EAAA,OAAA,UAAA,CAAA,GAAA,MAAA,QAAA,KAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,EAAA,aAAA,MAAA,CAAA,EAAA,EAAA,EAAA,WAAA,OAAA,GAAA,EAAA,OAAA,CAAA,MAAA,GAAA,CAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,GAAA,MAAA,GAAA,EAAA,GAAA,MAAA,IAAA,UAAA,yIAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAAA,CAAA,EAAA,WAAA,EAAA,EAAA,OAAA,aAAA,EAAA,WAAA,IAAA,EAAA,EAAA,OAAA,OAAA,EAAA,EAAA,KAAA,GAAA,EAAA,SAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,WAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,KAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAjjBA,IAAIC,EAAS,CACXC,KAAM,IAGJC,EAAW,CACbC,WAAY,IACZC,YAAa,IACbC,YAAa,GACbC,mBAAoB,EACpBC,mBAAoB,IACpBC,UAAW,IAIPC,EAAAA,WACU,SAAA,IAAA,EAAA,KAAA,GAEPC,KAAAA,MAAQ,GAERC,KAAAA,MAAQ,GAERC,KAAAA,UAAY,GAMZC,KAAAA,MAAQ,EACR,IAAA,IAAItC,EAAI,EAAGA,EAAI,GAAIA,IACjBmC,KAAAA,MAAMlC,KAAK,GACXmC,KAAAA,MAAMnC,MAAK,GAmhBtB,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,gBA/gBgBsB,MAAAA,SAAAA,GAGP,IAFDgB,IAAAA,EAAY,IAAIL,EAEXlC,EAAI,EAAGA,EAAI,GAAIA,IACtBuC,EAAUJ,MAAMnC,GAAK,KAAKmC,MAAMnC,GA0B3BuC,OAxBI,GAAPhB,EAEFgB,EAAUC,UACM,GAAPjB,GAETgB,EAAUE,QAAQ,GAClBF,EAAUC,UACVD,EAAUE,QAAQ,IACF,GAAPlB,GAETgB,EAAUE,QAAQ,GAClBF,EAAUC,UACVD,EAAUE,QAAQ,KAGlBF,EAAUE,QAAQ,GAClBF,EAAUC,UACVD,EAAUE,QAAQ,IAGfH,KAAAA,MAAQ,EACT,KAAKD,UAAUlD,OAAS,IACrBmD,KAAAA,KAAOf,GAEPgB,IAifX,CAAA,IAAA,QA9eU,MAAA,WAED,IAAA,IAAIvC,EAAI,EAAGA,EAAI,EAAGA,IAChB,IAAA,IAAI0C,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACtB,GAA0B,IAA1B,KAAKP,MAAU,EAAJnC,EAAQ0C,GACd,OAAA,EAIJ,IAFCC,IAAAA,EAAK,CAAC,EAAG,GACTC,EAAK,CAAC,EAAG,GACNC,EAAI,EAAGA,EAAI,IAAKA,EAAG,CACtBC,IAAAA,EAAK9C,EAAI4C,EAAGC,GACdE,EAAKL,EAAIC,EAAGE,GACVC,KAAAA,GAAM,GAAKC,GAAM,IAGjB,KAAKZ,MAAU,EAAJnC,EAAQ0C,KAAO,KAAKP,MAAW,EAALW,EAASC,GACzC,OAAA,GAKR,OAAA,IAydX,CAAA,IAAA,gBAtdkB,MAAA,WAET,IADDC,IAAAA,EAAS,GACJhD,EAAI,EAAGA,EAAI,GAAIA,IACD,GAAjB,KAAKmC,MAAMnC,IACbgD,EAAO/C,KAAKD,GAGTgD,OAAAA,IA+cX,CAAA,IAAA,eA1ceC,MAAAA,SAAAA,EAAGC,EAAGC,GACZhB,KAAAA,MAAU,EAAJc,EAAQC,GAAKC,IAyc5B,CAAA,IAAA,UAtcUC,MAAAA,SAAAA,GACD,IAAA,IAAIpD,EAAI,EAAGA,EAAIoD,IAAOpD,EAAG,CAGvB,IAFDqD,IAAAA,EAAY,GACZC,EAAY,GACPZ,EAAI,EAAGA,EAAI,KAAMA,EAAG,CACvBO,IAAAA,EAAIM,KAAKC,MAAMd,EAAI,GAEnBe,EADEf,EAAI,EAAIO,EAEZS,EAAK,EAAIT,EACXI,EAAe,EAALI,EAASC,GAAM,KAAKvB,MAAMO,GACpCY,EAAe,EAALG,EAASC,GAAM,KAAKtB,MAAMM,GAEjCP,KAAAA,MAAQkB,EACRjB,KAAAA,MAAQkB,EAER,IADDK,IAAAA,EAAgB,GACX3D,EAAI,EAAGA,EAAI,KAAKqC,UAAUlD,SAAUa,EAAG,CACxC4D,IAAAA,EAAW,KAAKvB,UAAUrC,GAC5B6D,EAAKD,EAASC,GAChBC,EAAKF,EAASE,GACdC,EAAKH,EAASG,GACdC,EAAKJ,EAASI,GAChBL,EAAc1D,KAAK,CAAE4D,GAAI,EAAIC,EAAIA,GAAID,EAAIE,GAAI,EAAIC,EAAIA,GAAID,IAEtD1B,KAAAA,UAAYsB,KA+avB,CAAA,IAAA,UA3aY,MAAA,WAEH,IAAA,IAAIV,EAAI,EAAGA,EAAI,EAAGA,IAChB,IAAA,IAAIC,EAAI,EAAGA,EAAI,EAAGA,IAChBd,KAAAA,MAAU,EAAJa,EAAQC,IAAK,EAIvB,IAAA,IAAID,EAAI,EAAGA,EAAI,EAAGA,IAChB,IAAA,IAAIC,EAAI,EAAGA,EAAI,IAAKA,EACnB,GAA0B,IAA1B,KAAKf,MAAU,EAAJc,EAAQC,GAAnB,CAEGe,IADHA,IAAAA,EAAKhB,EACFgB,GAAM,GAAG,CACRC,IAAAA,EAAM,KAAK/B,MAAiB,GAAV8B,EAAK,GAASf,GAClCgB,GAAQ,IAARA,EAEG/B,KAAAA,MAAiB,GAAV8B,EAAK,GAASf,GAAK,KAAKf,MAAW,EAAL8B,EAASf,GAC9Cf,KAAAA,MAAW,EAAL8B,EAASf,GAAK,IACvBe,MACG,CAAA,GACLC,IAAQ,KAAK/B,MAAW,EAAL8B,EAASf,IAC3B,KAAKd,MAAW,EAAL6B,EAASf,IACpB,KAAKd,MAAiB,GAAV6B,EAAK,GAASf,GAQ3B,MALKf,KAAAA,MAAiB,GAAV8B,EAAK,GAASf,GAAK,EAAIgB,EAC9B/B,KAAAA,MAAW,EAAL8B,EAASf,GAAK,EACpBd,KAAAA,MAAiB,GAAV6B,EAAK,GAASf,IAAK,IAC7Be,GAKFA,GAAMhB,GAEHZ,KAAAA,UAAUpC,KAAK,CAAE4D,GAAIX,EAAGY,GAAIb,EAAGc,GAAIb,EAAGc,GAAIC,SAwYzD,EAniBM/B,GAmKAiC,EAAAA,WACU,SAAA,IAAA,EAAA,KAAA,GAEPC,KAAAA,OAASC,SAASC,eAAe,aACjCC,KAAAA,UAAY,IAAIC,EAAU,KAAKJ,QAC/BK,KAAAA,MAAQ,IAAIvC,EAGZ,IAFCwC,IAAAA,EAAI,CAAC,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,KAAM,MAE5C1E,EAAI,EAAGA,EAAI0E,EAAEvF,OAAQa,IAAK,CAC3B2E,IAAAA,EAAQ,KAAKF,MAAMG,gBACnBV,EAAMQ,EAAE1E,GAER6E,EAAQF,EAAMpB,KAAKC,MAAMD,KAAKuB,SAAWH,EAAMxF,SAC/C8D,EAAIM,KAAKC,MAAMqB,EAAQ,GAC3B3B,EAAI2B,EAAQ,EACTJ,KAAAA,MAAMM,aAAa9B,EAAGC,EAAGgB,GACzBK,KAAAA,UAAUS,SAAS,KAAKZ,OAAQnB,EAAGC,EAAGgB,EAAK,IAgXtD,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,OA5WO3C,MAAAA,SAAAA,GACC,IAAA,KAAKkD,MAAMQ,SACV,KAAKV,UAAUW,OAAhB,CACA3C,IAAAA,EAAY,KAAKkC,MAAMU,cAAc5D,GAErCgB,GAAAA,EAAUF,UAAUlD,OAAS,EAAG,CAE5BwF,IAAAA,EAAQpC,EAAUqC,gBAClBV,EAAMX,KAAKuB,SAAW,GAAM,EAAI,EAChCD,EAAQF,EAAMpB,KAAKC,MAAMD,KAAKuB,SAAWH,EAAMxF,SAC/C8D,EAAIM,KAAKC,MAAMqB,EAAQ,GAC3B3B,EAAI2B,EAAQ,EAGdtC,EAAUwC,aAAa9B,EAAGC,EAAGgB,GAGxBK,KAAAA,UAAUa,OAAO7C,EAAWU,EAAGC,EAAGgB,GAGlCO,KAAAA,MAAQlC,QAwVnB,EAhYM4B,GA6CAK,EAAAA,WACQJ,SAAAA,EAAAA,GAAQ,EAAA,KAAA,GAEbiB,KAAAA,YAAc,GAEdC,KAAAA,MAAQ,GAGRC,KAAAA,IAAM,IAAIC,IAEVC,KAAAA,IAAM,EACN,IAAA,IAAIzF,EAAI,EAAGA,EAAI,GAAIA,IAAK,CACrBiD,IAAAA,EAAIM,KAAKC,MAAMxD,EAAI,GACvBkD,EAAIlD,EAAI,EACJ0F,EAAO,IAAIC,EAAK,EAAGvB,GACzBsB,EAAKE,OAAO3C,EAAGC,GACVmC,KAAAA,YAAYpF,KAAKyF,GAEnBtB,KAAAA,OAASA,EAETc,KAAAA,QAAS,EA+TlB,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,SA1TST,MAAAA,SAAAA,EAAOoB,EAAMC,EAAMC,GAAQ,IAAA,EAAA,KAE3Bb,KAAAA,QAAS,EAGRc,IADN,EACMA,EAAW,EACTC,EAAOtE,EAASK,mBAClBkE,EAAQ,KAGRC,EAAM,IAAIX,IACKf,EAAAA,EAAAA,EAAMpC,WAP3B,IAAA,IAAA,EAAA,WAOaC,IAAAA,EAPb,EAAA,MAQQuC,GAAS,EAMTA,GALJ,EAAKU,IAAIa,QAAQ,SAACjD,EAAOkD,EAAKF,GACxBhD,EAAMD,IAAMZ,EAAKuB,IAAMV,EAAMF,IAAMX,EAAKwB,KAC1Ce,EAAQwB,MAGG,IAAXxB,EAEF,OADAyB,QAAQC,MAAM,mBACd,WAEFJ,EAAIK,IAAI3B,EAAOvC,IAXmB,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,IAPtC,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,IAoBE6D,EAAIC,QAAQ,SAACjD,EAAOkD,EAAKF,GACvB,EAAKZ,IAAIiB,IAAIH,EAAK,CAAEnD,EAAGC,EAAMY,GAAId,EAAGE,EAAMa,OAoB5CyC,sBAjBa,SAAPC,EAAQC,GACPT,IACHA,EAAQS,GAEVX,GAAYW,EAAYT,GAASD,GACjCD,EAAWzC,KAAKqD,IAAIZ,EAAU,KAEd,GACdG,EAAIC,QAAQ,SAACjD,EAAOkD,EAAKF,GACvB,EAAKb,MAAMe,GAAKQ,UAAU1D,EAAMU,GAAIV,EAAMW,GAAIX,EAAMY,GAAIZ,EAAMa,GAAIgC,KAIlEA,EAAW,GACbS,sBAAsBC,KAYrB,IAJDI,IAAAA,EAAc,GAEdC,EAAiB,GAEZ9D,EAAAA,SAAAA,GACF,IAAIC,IAAAA,EAAAA,SAAAA,GACHuB,GAAAA,EAAMrC,MAAU,EAAJa,EAAQC,GAAI,CAEtB2B,IAAAA,EAAQ,GACZ,EAAKU,IAAIa,QAAQ,SAACjD,EAAOkD,EAAKF,GACxBhD,EAAMD,IAAMA,GAAKC,EAAMF,IAAMA,GAC/B4B,EAAM5E,KAAKoG,KAGfS,EAAY7G,KAAK4E,EAAM,IACvBkC,EAAe9G,KAAK4E,EAAM,MAVrB3B,EAAI,EAAGA,EAAI,IAAKA,EAAhBA,EAAAA,IADFD,EAAI,EAAGA,EAAI,IAAKA,EAAhBA,EAAAA,GAgBH+D,IAAAA,EAAW,KAAKvB,MACjBF,KAAAA,IAAIiB,IAAIQ,EAAU,CAAE9D,EAAG4C,EAAM7C,EAAG4C,IAEjCG,IAAAA,EAAW,EACTC,EAAOtE,EAASK,mBAClBkE,EAAQ,KAgCZ1H,WA9Ba,SAAPkI,IACCR,IACHA,EAAQ,IAAIe,KACZ,EAAK3B,MAAM0B,GAAY,IAAIrB,EAAKI,EAAQ,EAAK3B,SAE3CuC,IAAAA,EAAY,IAAIM,KAIhBjB,GAHJA,GAAYW,EAAYT,GAASD,GACjCD,EAAWzC,KAAKqD,IAAIZ,EAAU,KAEd,EAAG,CACCe,IADD,EACCA,EAAAA,EAAAA,GADD,IACiB,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAzBlC,IAAAA,EAAyB,EAAA,MAC5BqC,EAAI,EAAK3B,IAAI4B,IAAItC,GACrB,EAAKS,MAAMT,GAAOuC,aAAa3C,EAAMtC,MAAY,EAAN+E,EAAEjE,EAAQiE,EAAEhE,IACvD,EAAKoC,MAAMT,GAAOwC,OAAO,EAAK9B,IAAI4B,IAAItC,GAAO5B,EAAG,EAAKsC,IAAI4B,IAAItC,GAAO3B,EAAG8C,EAAU,IAJlE,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,IAMjB,EAAKV,MAAM0B,GAAUK,OAAOxB,EAAMC,EAAME,EAAU,GAGhDA,GAAAA,EAAW,EACbS,sBAAsBC,OACjB,CAEL,EAAKxB,QAAS,EACI4B,IAHb,EAGaA,EAAAA,EAAAA,GAHb,IAG0B,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAtBjC,IAAAA,EAAsB,EAAA,MAC7B,EAAKT,OAAOkD,YAAY,EAAKhC,MAAMT,GAAO0C,MAC1C,EAAKjC,MAAMT,GAAS,KACpB,EAAKU,IAAIiC,OAAO3C,IANb,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,OAUsC,IAA9BlD,EAASK,sBA+MhC,CAAA,IAAA,WAxMWoC,MAAAA,SAAAA,EAAQnB,EAAGC,EAAGgB,GAAe,IAAA,EAAA,KAAVuD,EAAO,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,EAC7B5C,GAAS,EAMTA,GALCU,KAAAA,IAAIa,QAAQ,SAACjD,EAAOkD,EAAKF,GACxBhD,EAAMD,IAAMA,GAAKC,EAAMF,IAAMA,IAC/B4B,EAAQwB,MAGG,IAAXxB,EAAAA,CAIJA,EAAQ,KAAKY,MACRH,KAAAA,MAAMT,GAAS,IAAIc,EAAKzB,EAAKE,GAC7BmB,KAAAA,IAAIiB,IAAI3B,EAAO,CAAE3B,EAAGA,EAAGD,EAAGA,IAC3B+C,IAAAA,EAAW,EACXE,EAAQ,KACND,EAAOtE,EAASK,mBAiBtByE,sBAfe,SAATrB,EAAUuB,GACTT,IACHA,EAAQS,GAEVX,GAAYW,EAAYT,GAASD,GACjCD,EAAWzC,KAAKqD,IAAIZ,EAAU,KAEd,GACd,EAAKV,MAAMT,GAAOwC,OAAOpE,EAAGC,EAAG8C,EAAUyB,GAGvCzB,EAAW,GACbS,sBAAsBrB,UAtBnBE,KAAAA,MAAMT,GAAOuC,aAAalD,OAgMrC,EAnVMM,GAiLAmB,EAAAA,WAGQzB,SAAAA,EAAAA,EAAKE,GAAQ,EAAA,KAAA,GAClBmD,KAAAA,KAAO,KAAKG,eACjBtD,EAAOuD,YAAY,KAAKJ,MACnBH,KAAAA,aAAalD,GA4JtB,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,YAtJYL,MAAAA,SAAAA,EAAIC,EAAIC,EAAIC,EAAIhG,GAClBkF,IACAD,EAAIa,GAAME,EAAKF,GAAM9F,EACrB4J,GAFI/D,GAAME,EAAKF,GAAM7F,IAET2D,EAASC,WAAaD,EAASG,aAAeH,EAASG,YACnE+F,EAAO5E,GAAKtB,EAASE,YAAcF,EAASG,aAAeH,EAASG,YACrEyF,KAAAA,KAAKO,MAAMC,KAAUH,GAAAA,OAAAA,EAA1B,MACKL,KAAAA,KAAKO,MAAME,IAASH,GAAAA,OAAAA,EAAzB,QAgJJ,CAAA,IAAA,SA5IS5E,MAAAA,SAAAA,EAAGC,GACHmE,KAAAA,OAAOpE,EAAGC,EAAG,KA2ItB,CAAA,IAAA,SArISD,MAAAA,SAAAA,EAAGC,EAAG8C,GAAUyB,IAAAA,EAAO,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,EACxBQ,EAAStG,EAASE,YAClBqG,EAAQvG,EAASC,WACjBiG,EAAO5E,GAAKtB,EAASE,YAAcF,EAASG,aAAeH,EAASG,YACpE8F,EAAO1E,GAAKvB,EAASC,WAAaD,EAASG,aAAeH,EAASG,YACnEqG,EAAWxG,EAASM,UACX,IAATwF,GACFQ,EAAStG,EAASE,YAAcmE,EAChCkC,EAAQvG,EAASC,WAAaoE,EAC9B4B,EACE1E,GAAKvB,EAASC,WAAaD,EAASG,aACpCH,EAASG,aACRH,EAASC,WAAasG,GAAS,EAClCL,EACE5E,GAAKtB,EAASE,YAAcF,EAASG,aACrCH,EAASG,aACRH,EAASE,YAAcoG,GAAU,EACpCE,EAAWxG,EAASM,UAAY+D,GACd,IAATyB,IACTQ,EAAStG,EAASE,YAAcF,EAASI,mBAAqBwB,KAAK6E,IAAI7E,KAAK8E,GAAKrC,GACjFkC,EAAQvG,EAASC,WAAaD,EAASI,mBAAqBwB,KAAK6E,IAAI7E,KAAK8E,GAAKrC,GAC/E4B,EACE1E,GAAKvB,EAASC,WAAaD,EAASG,aACpCH,EAASG,aACRH,EAASC,WAAasG,GAAS,EAClCL,EACE5E,GAAKtB,EAASE,YAAcF,EAASG,aACrCH,EAASG,aACRH,EAASE,YAAcoG,GAAU,EACpCE,EAAWxG,EAASM,WAAagG,EAAStG,EAASE,cAEhD0F,KAAAA,KAAKO,MAAMC,KAAUH,GAAAA,OAAAA,EAA1B,MACKL,KAAAA,KAAKO,MAAME,IAASH,GAAAA,OAAAA,EAAzB,MACKN,KAAAA,KAAKO,MAAMG,OAAYA,GAAAA,OAAAA,EAA5B,MACKV,KAAAA,KAAKO,MAAMI,MAAWA,GAAAA,OAAAA,EAA3B,MACKX,KAAAA,KAAKO,MAAMK,SAAcA,GAAAA,OAAAA,EAA9B,MACKZ,KAAAA,KAAKO,MAAMQ,WAAgBL,GAAAA,OAAAA,EAAhC,QAiGJ,CAAA,IAAA,eA9Fe/D,MAAAA,SAAAA,GAEPA,GADCqD,KAAAA,KAAKgB,YAAcrE,EAAM,EAAIA,EAAM,GAC5B,IAARA,EAAW,CACTsE,IAAAA,EAAMnE,SAASoE,cAAc,OACjCD,EAAIE,IAAMC,EAAV,QACAH,EAAIN,MAAQ,MACPX,KAAAA,KAAKO,MAAMc,gBAA0BC,QAAAA,OAAAA,EAA1C,QAAA,MACKtB,KAAAA,KAAKO,MAAMgB,eAAiB,QAI3B5E,OADHA,KAAAA,IAAMA,EACHA,GACD,KAAA,EACEqD,KAAAA,KAAKO,MAAMiB,gBAAkB,OAC7BxB,KAAAA,KAAKO,MAAMkB,MAAQ,OACxB,MACG,KAAA,EACEzB,KAAAA,KAAKO,MAAMiB,gBAAkB,OAC7BxB,KAAAA,KAAKO,MAAMkB,MAAQ,OACxB,MACG,KAAA,EACEzB,KAAAA,KAAKO,MAAMiB,gBAAkB,OAC7BxB,KAAAA,KAAKO,MAAMkB,MAAQ,OACxB,MACG,KAAA,EACEzB,KAAAA,KAAKO,MAAMiB,gBAAkB,OAC7BxB,KAAAA,KAAKO,MAAMkB,MAAQ,OACxB,MACG,KAAA,GACEzB,KAAAA,KAAKO,MAAMiB,gBAAkB,OAC7BxB,KAAAA,KAAKO,MAAMkB,MAAQ,OACxB,MACG,KAAA,GACEzB,KAAAA,KAAKO,MAAMiB,gBAAkB,OAC7BxB,KAAAA,KAAKO,MAAMkB,MAAQ,OACxB,MACG,KAAA,GACEzB,KAAAA,KAAKO,MAAMiB,gBAAkB,OAC7BxB,KAAAA,KAAKO,MAAMkB,MAAQ,OACxB,MACG,KAAA,IACEzB,KAAAA,KAAKO,MAAMiB,gBAAkB,OAC7BxB,KAAAA,KAAKO,MAAMkB,MAAQ,OACxB,MACG,KAAA,IACEzB,KAAAA,KAAKO,MAAMiB,gBAAkB,OAC7BxB,KAAAA,KAAKO,MAAMkB,MAAQ,OACxB,MACG,KAAA,IACEzB,KAAAA,KAAKO,MAAMiB,gBAAkB,OAC7BxB,KAAAA,KAAKO,MAAMkB,MAAQ,OACxB,MACG,KAAA,KACEzB,KAAAA,KAAKO,MAAMiB,gBAAkB,OAC7BxB,KAAAA,KAAKO,MAAMkB,MAAQ,OACxB,MACG,KAAA,KACEzB,KAAAA,KAAKO,MAAMiB,gBAAkB,OAC7BxB,KAAAA,KAAKO,MAAMkB,MAAQ,OACxB,MACF,QACOzB,KAAAA,KAAKO,MAAMiB,gBAAkB,OAC7BxB,KAAAA,KAAKO,MAAMkB,MAAQ,UAgChC,CAAA,IAAA,eA5BiB,MAAA,WACPhG,IAAAA,EAASqB,SAASoE,cAAc,OAE/BzF,OADPA,EAAOiG,UAAUC,IAAI,YACdlG,MAyBX,EAlKM2C,GA6IAwD,EAAO,IAAIhF,EAGjBE,SAAS+E,iBAAiB,UAAW,SAAC3K,GAEhCgD,GADJA,EAAOC,KAAKjD,EAAE4K,UAAW,EACrB5H,EAAOC,KAAK,IAEdyH,EAAK7G,KAAK,QACL,GAAIb,EAAOC,KAAK,IAErByH,EAAK7G,KAAK,QACL,GAAIb,EAAOC,KAAK,IAErByH,EAAK7G,KAAK,OACL,CAAA,IAAIb,EAAOC,KAAK,IAIrB,OAFAyH,EAAK7G,KAAK,MAKd+B,SAAS+E,iBAAiB,QAAS,SAAC3K,GAClCgD,EAAOC,KAAKjD,EAAE4K,UAAW","file":"main.59f7486c.js","sourceRoot":"../src","sourcesContent":["// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","import sisisinUrl from './assets/sisisin.jpg';\nimport sisisin2048 from './assets/sisisin2048.jpg';\n\nlet global = {\n  keys: [],\n};\n\nlet Settings = {\n  CELL_WIDTH: 100,\n  CELL_HEIGHT: 100,\n  CELL_MARGIN: 12,\n  ANIMATION_SWELLING: 8,\n  ANIMATION_GEN_TIME: 100,\n  FONT_SIZE: 40,\n};\n\n// ゲームの状態を管理するクラス\nclass State {\n  constructor() {\n    // 4 * 4 行列で, 各要素にどういう要素が入っているかを管理する\n    this.board = [];\n    // move したときに, 例えば 2 と 2 がくっついたりして merge されたかどうかを管理する\n    this.merge = [];\n    // move したときに, 動いたセルはどこからどこへ行ったのか\n    this.moveCells = [];\n    // move どの向きに移動したのかを求める\n    // 0: up\n    // 1: right\n    // 2: down\n    // 3: left\n    this.move = -1;\n    for (let i = 0; i < 16; i++) {\n      this.board.push(0);\n      this.merge.push(false);\n    }\n  }\n  // 指示された方向に動いた際の次の State を求める\n  calcNextState(dir) {\n    let nextState = new State();\n    // コピーする\n    for (let i = 0; i < 16; i++) {\n      nextState.board[i] = this.board[i];\n    }\n    if (dir == 0) {\n      // up\n      nextState._moveUp();\n    } else if (dir == 1) {\n      // right\n      nextState._rotate(3);\n      nextState._moveUp();\n      nextState._rotate(1);\n    } else if (dir == 2) {\n      // down\n      nextState._rotate(2);\n      nextState._moveUp();\n      nextState._rotate(2);\n    } else {\n      // left\n      nextState._rotate(1);\n      nextState._moveUp();\n      nextState._rotate(3);\n    }\n    // 動いてたら動いてたという情報を与える\n    this.move = -1;\n    if (this.moveCells.length > 0) {\n      this.move = dir;\n    }\n    return nextState;\n  }\n  // 死んでないか確かめる\n  isDie() {\n    // 全部埋まっていて, かつどの隣り合ったセル同士も異なっていたら true\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        if (this.board[i * 4 + j] === 0) {\n          return false;\n        }\n        const dx = [1, 0];\n        const dy = [0, 1];\n        for (let k = 0; k < 2; ++k) {\n          let ni = i + dy[k],\n            nj = j + dx[k];\n          if (ni >= 4 || nj >= 4) {\n            continue;\n          }\n          if (this.board[i * 4 + j] === this.board[ni * 4 + nj]) {\n            return false;\n          }\n        }\n      }\n    }\n    return true;\n  }\n  // 空き領域を配列にして返す\n  getEmptyCells() {\n    let result = [];\n    for (let i = 0; i < 16; i++) {\n      if (this.board[i] == 0) {\n        result.push(i);\n      }\n    }\n    return result;\n  }\n  // セルの値を書き換える(ランダムに出現するのをイメージ)\n  // だけど別の用途で使ってもいいやという\n  // y, x: 場所\n  rewriteCells(y, x, value) {\n    this.board[y * 4 + x] = value;\n  }\n  // board を時計回りに回転させる\n  _rotate(rot) {\n    for (let i = 0; i < rot; ++i) {\n      let nextBoard = [];\n      let nextMerge = [];\n      for (let j = 0; j < 16; ++j) {\n        let y = Math.floor(j / 4),\n          x = j - 4 * y;\n        let ny = x,\n          nx = 3 - y;\n        nextBoard[ny * 4 + nx] = this.board[j];\n        nextMerge[ny * 4 + nx] = this.merge[j];\n      }\n      this.board = nextBoard;\n      this.merge = nextMerge;\n      let nextMoveCells = [];\n      for (let i = 0; i < this.moveCells.length; ++i) {\n        const moveCell = this.moveCells[i];\n        let fx = moveCell.fx,\n          fy = moveCell.fy,\n          tx = moveCell.tx,\n          ty = moveCell.ty;\n        nextMoveCells.push({ fx: 3 - fy, fy: fx, tx: 3 - ty, ty: tx });\n      }\n      this.moveCells = nextMoveCells;\n    }\n  }\n  // 後 _moveUp が必要ですね\n  _moveUp() {\n    // merge 情報をリセット\n    for (let y = 0; y < 4; y++) {\n      for (let x = 0; x < 4; x++) {\n        this.merge[y * 4 + x] = false;\n      }\n    }\n    // 上から順番に見ていき, くっつけられるならくっつけていく\n    for (let y = 1; y < 4; y++) {\n      for (let x = 0; x < 4; ++x) {\n        if (this.board[y * 4 + x] === 0) continue;\n        let cy = y;\n        while (cy >= 1) {\n          const num = this.board[(cy - 1) * 4 + x];\n          if (num === 0) {\n            // 上が空いてるなら普通に動かす\n            this.board[(cy - 1) * 4 + x] = this.board[cy * 4 + x];\n            this.board[cy * 4 + x] = 0;\n            --cy;\n          } else if (\n            num === this.board[cy * 4 + x] &&\n            !this.merge[cy * 4 + x] &&\n            !this.merge[(cy - 1) * 4 + x]\n          ) {\n            // 上と同じ数なら合体させる\n            this.board[(cy - 1) * 4 + x] = 2 * num;\n            this.board[cy * 4 + x] = 0;\n            this.merge[(cy - 1) * 4 + x] = true;\n            --cy;\n          } else {\n            break;\n          }\n        }\n        if (cy != y) {\n          // 少なくとも一マス動いているので動き情報を記録\n          this.moveCells.push({ fx: x, fy: y, tx: x, ty: cy });\n        }\n      }\n    }\n  }\n}\n\n// Game 全体を管理するクラス\nclass Game {\n  constructor() {\n    // 制御するセルを指定\n    this.screen = document.getElementById('gameBoard');\n    this.animation = new Animation(this.screen);\n    this.state = new State();\n    const v = [2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048];\n    // 初期状態として 2 つ cell を入れておく\n    for (let i = 0; i < v.length; i++) {\n      const empty = this.state.getEmptyCells();\n      const num = v[i];\n      // const num = Math.random() < 0.9 ? 2 : 4;\n      const index = empty[Math.floor(Math.random() * empty.length)];\n      const y = Math.floor(index / 4),\n        x = index % 4;\n      this.state.rewriteCells(y, x, num);\n      this.animation.generate(this.screen, y, x, num, 1);\n    }\n  }\n  // キー入力に対応してゴニョゴニョする\n  move(dir) {\n    if (this.state.isDie()) return;\n    if (!this.animation.finish) return;\n    let nextState = this.state.calcNextState(dir);\n    // いずれかのセルが動いたならば\n    if (nextState.moveCells.length > 0) {\n      // ランダムに数字を挿入する処理\n      const empty = nextState.getEmptyCells();\n      const num = Math.random() < 0.9 ? 2 : 4;\n      const index = empty[Math.floor(Math.random() * empty.length)];\n      const y = Math.floor(index / 4),\n        x = index % 4;\n\n      // なんやかんや\n      nextState.rewriteCells(y, x, num);\n\n      // アニメーション\n      this.animation.update(nextState, y, x, num);\n\n      // state を更新\n      this.state = nextState;\n    }\n  }\n}\n\nclass Animation {\n  constructor(screen) {\n    // 下に並べて置くセル\n    this.bottomCells = [];\n    // 実際に動くセル\n    this.cells = [];\n    // セルの位置を覚えておく\n    // this.cells[i] の位置は this.pos[i] が覚えておく\n    this.pos = new Map();\n    // 新しいセルを出現させるときのイテレーター的な\n    this.itr = 0;\n    for (let i = 0; i < 16; i++) {\n      const y = Math.floor(i / 4),\n        x = i % 4;\n      const cell = new Cell(0, screen);\n      cell.setPos(y, x);\n      this.bottomCells.push(cell);\n    }\n    this.screen = screen;\n    // アニメーションが終了したかどうか\n    this.finish = true;\n  }\n  // 指定したセル群を移動させる -> 合体させる -> 新しい数字が表れる\n  // 引数：State クラス\n  // 最後に merge したところから数字を登場させる\n  update(state, addY, addX, addNum) {\n    // アニメーション開始\n    this.finish = false;\n    // 移動するアニメーション\n    {\n      let progress = 0;\n      const time = Settings.ANIMATION_GEN_TIME;\n      let start = null;\n\n      // index -> 目標位置\n      let map = new Map();\n      for (const move of state.moveCells) {\n        let index = -1;\n        this.pos.forEach((value, key, map) => {\n          if (value.x === move.fx && value.y === move.fy) {\n            index = key;\n          }\n        });\n        if (index === -1) {\n          console.error('cell not found!');\n          continue;\n        }\n        map.set(index, move);\n      }\n      map.forEach((value, key, map) => {\n        this.pos.set(key, { x: value.tx, y: value.ty });\n      });\n\n      const proc = (timestamp) => {\n        if (!start) {\n          start = timestamp;\n        }\n        progress = (timestamp - start) / time;\n        progress = Math.min(progress, 1);\n\n        if (progress >= 0) {\n          map.forEach((value, key, map) => {\n            this.cells[key].translate(value.fx, value.fy, value.tx, value.ty, progress);\n          });\n        }\n\n        if (progress < 1) {\n          requestAnimationFrame(proc);\n        }\n      };\n      requestAnimationFrame(proc);\n    }\n    // 数字が合体して数字が表れるアニメーション\n    {\n      // removeChild する要素の index\n      let deleteIndex = [];\n      // 数を倍にする要素の index\n      let animationIndex = [];\n      // merge が true になる場所に向かっているセルは必ず二つあるので, 一つは delete に入れてもう一つは animation に入れる\n      for (let y = 0; y < 4; ++y) {\n        for (let x = 0; x < 4; ++x) {\n          if (state.merge[y * 4 + x]) {\n            // this.pos から index を二つ探す\n            let index = [];\n            this.pos.forEach((value, key, map) => {\n              if (value.x === x && value.y === y) {\n                index.push(key);\n              }\n            });\n            deleteIndex.push(index[0]);\n            animationIndex.push(index[1]);\n          }\n        }\n      }\n      // 新しく追加する数字\n      const addIndex = this.itr++;\n      this.pos.set(addIndex, { x: addX, y: addY });\n\n      let progress = 0;\n      const time = Settings.ANIMATION_GEN_TIME;\n      let start = null;\n\n      const proc = () => {\n        if (!start) {\n          start = new Date();\n          this.cells[addIndex] = new Cell(addNum, this.screen);\n        }\n        let timestamp = new Date();\n        progress = (timestamp - start) / time;\n        progress = Math.min(progress, 1);\n\n        if (progress >= 0) {\n          for (let index of animationIndex) {\n            let p = this.pos.get(index);\n            this.cells[index].changeAttrib(state.board[p.y * 4 + p.x]);\n            this.cells[index].appear(this.pos.get(index).y, this.pos.get(index).x, progress, 2);\n          }\n          this.cells[addIndex].appear(addY, addX, progress, 1);\n        }\n\n        if (progress < 1) {\n          requestAnimationFrame(proc);\n        } else {\n          // アニメーション終了\n          this.finish = true;\n          for (let index of deleteIndex) {\n            this.screen.removeChild(this.cells[index].elem);\n            this.cells[index] = null;\n            this.pos.delete(index);\n          }\n        }\n      };\n      setTimeout(proc, Settings.ANIMATION_GEN_TIME * 1.1);\n    }\n  }\n  // 数字が表れる\n  // screen: 親要素\n  // [y, x] 座標に num を登場させるアニメーション\n  // type: アニメーションの仕方(0: 特に何も 1: 広がる感じ(ランダムに表れるやつ) 2: 広がってから落ち着く(合体するやつ))\n  generate(screen, y, x, num, type = 0) {\n    let index = -1;\n    this.pos.forEach((value, key, map) => {\n      if (value.x === x && value.y === y) {\n        index = key;\n      }\n    });\n    if (index !== -1) {\n      this.cells[index].changeAttrib(num);\n      return;\n    }\n    index = this.itr++;\n    this.cells[index] = new Cell(num, screen);\n    this.pos.set(index, { x: x, y: y });\n    let progress = 0;\n    let start = null;\n    const time = Settings.ANIMATION_GEN_TIME;\n\n    const update = (timestamp) => {\n      if (!start) {\n        start = timestamp;\n      }\n      progress = (timestamp - start) / time;\n      progress = Math.min(progress, 1);\n\n      if (progress >= 0) {\n        this.cells[index].appear(y, x, progress, type);\n      }\n\n      if (progress < 1) {\n        requestAnimationFrame(update);\n      }\n    };\n    requestAnimationFrame(update);\n  }\n}\n\n// Cell を管理するクラス\nclass Cell {\n  // num: 数字\n  // screen: 親要素\n  constructor(num, screen) {\n    this.elem = this._initElement();\n    screen.appendChild(this.elem);\n    this.changeAttrib(num);\n  }\n  // 移動する\n  // fx, fy: どこから\n  // tx, ty: どこへ\n  // process: 進捗率\n  translate(fx, fy, tx, ty, process) {\n    const x = fx + (tx - fx) * process;\n    const y = fy + (ty - fy) * process;\n    const posX = x * (Settings.CELL_WIDTH + Settings.CELL_MARGIN) + Settings.CELL_MARGIN;\n    const posY = y * (Settings.CELL_HEIGHT + Settings.CELL_MARGIN) + Settings.CELL_MARGIN;\n    this.elem.style.left = `${posX}px`;\n    this.elem.style.top = `${posY}px`;\n  }\n  // セルを配置\n  // y, x: 配置する位置\n  setPos(y, x) {\n    this.appear(y, x, 0);\n  }\n  // 新しいセルが現れるアニメーション\n  // y, x: 出てくる位置\n  // process: 進捗率\n  // type: アニメーションの仕方(0: 特に何も 1: 広がる感じ(ランダムに表れるやつ) 2: 広がってから落ち着く(合体するやつ))\n  appear(y, x, progress, type = 0) {\n    let height = Settings.CELL_HEIGHT;\n    let width = Settings.CELL_WIDTH;\n    let posY = y * (Settings.CELL_HEIGHT + Settings.CELL_MARGIN) + Settings.CELL_MARGIN;\n    let posX = x * (Settings.CELL_WIDTH + Settings.CELL_MARGIN) + Settings.CELL_MARGIN;\n    let fontSize = Settings.FONT_SIZE;\n    if (type === 1) {\n      height = Settings.CELL_HEIGHT * progress;\n      width = Settings.CELL_WIDTH * progress;\n      posX =\n        x * (Settings.CELL_WIDTH + Settings.CELL_MARGIN) +\n        Settings.CELL_MARGIN +\n        (Settings.CELL_WIDTH - width) / 2;\n      posY =\n        y * (Settings.CELL_HEIGHT + Settings.CELL_MARGIN) +\n        Settings.CELL_MARGIN +\n        (Settings.CELL_HEIGHT - height) / 2;\n      fontSize = Settings.FONT_SIZE * progress;\n    } else if (type === 2) {\n      height = Settings.CELL_HEIGHT + Settings.ANIMATION_SWELLING * Math.sin(Math.PI * progress);\n      width = Settings.CELL_WIDTH + Settings.ANIMATION_SWELLING * Math.sin(Math.PI * progress);\n      posX =\n        x * (Settings.CELL_WIDTH + Settings.CELL_MARGIN) +\n        Settings.CELL_MARGIN +\n        (Settings.CELL_WIDTH - width) / 2;\n      posY =\n        y * (Settings.CELL_HEIGHT + Settings.CELL_MARGIN) +\n        Settings.CELL_MARGIN +\n        (Settings.CELL_HEIGHT - height) / 2;\n      fontSize = Settings.FONT_SIZE * (height / Settings.CELL_HEIGHT);\n    }\n    this.elem.style.left = `${posX}px`;\n    this.elem.style.top = `${posY}px`;\n    this.elem.style.height = `${height}px`;\n    this.elem.style.width = `${width}px`;\n    this.elem.style.fontSize = `${fontSize}px`;\n    this.elem.style.lineHeight = `${height}px`;\n  }\n  // セルの値を変更する\n  changeAttrib(num) {\n    this.elem.textContent = num > 0 ? num : '';\n    if (num === 0) {\n      let img = document.createElement('img');\n      img.src = sisisinUrl;\n      img.width = '100';\n      this.elem.style.backgroundImage = `url(\"${sisisin2048}\")`;\n      this.elem.style.backgroundSize = 'cover';\n      // this.elem.appendChild(img);\n    }\n    this.num = num;\n    switch (num) {\n      case 0:\n        this.elem.style.backgroundColor = '#ccc';\n        this.elem.style.color = '#000';\n        break;\n      case 2:\n        this.elem.style.backgroundColor = '#eee';\n        this.elem.style.color = '#000';\n        break;\n      case 4:\n        this.elem.style.backgroundColor = '#eec';\n        this.elem.style.color = '#000';\n        break;\n      case 8:\n        this.elem.style.backgroundColor = '#f93';\n        this.elem.style.color = '#fff';\n        break;\n      case 16:\n        this.elem.style.backgroundColor = '#c66';\n        this.elem.style.color = '#fff';\n        break;\n      case 32:\n        this.elem.style.backgroundColor = '#c33';\n        this.elem.style.color = '#fff';\n        break;\n      case 64:\n        this.elem.style.backgroundColor = '#c11';\n        this.elem.style.color = '#fff';\n        break;\n      case 128:\n        this.elem.style.backgroundColor = '#fc6';\n        this.elem.style.color = '#fff';\n        break;\n      case 256:\n        this.elem.style.backgroundColor = '#fc5';\n        this.elem.style.color = '#fff';\n        break;\n      case 512:\n        this.elem.style.backgroundColor = '#fc3';\n        this.elem.style.color = '#fff';\n        break;\n      case 1024:\n        this.elem.style.backgroundColor = '#fc1';\n        this.elem.style.color = '#fff';\n        break;\n      case 2048:\n        this.elem.style.backgroundColor = '#fc0';\n        this.elem.style.color = '#fff';\n        break;\n      default:\n        this.elem.style.backgroundColor = '#222';\n        this.elem.style.color = '#fff';\n        break;\n    }\n  }\n  _initElement() {\n    const result = document.createElement('div');\n    result.classList.add('gameCell');\n    return result;\n  }\n}\n\nconst game = new Game();\n\n// key 入力\ndocument.addEventListener('keydown', (e) => {\n  global.keys[e.keyCode] = true;\n  if (global.keys[38]) {\n    // up\n    game.move(0);\n  } else if (global.keys[39]) {\n    // right\n    game.move(1);\n  } else if (global.keys[40]) {\n    // down\n    game.move(2);\n  } else if (global.keys[37]) {\n    // left\n    game.move(3);\n  } else {\n    return;\n  }\n});\ndocument.addEventListener('keyup', (e) => {\n  global.keys[e.keyCode] = false;\n});\n"]}